The mission was to create a Python program that automatically scans through a network log. It is supposed to look for instances of malicious data. The program is to also display a list of inbound and outbound IP addresses, as well as a count of the scans performed. 

My Python program is called ‘scanners.py’. The program is designed to scan the ‘ssh.log.txt’ file, and most of the code is designed with the format of this file in mind. The log file is spaced with ‘tabs’, and this helps to convert each line into a list, then reference a specific item using an index. It is important to note that because of this pattern, certain indexes will represent particular information. Basically, at index (2) and (4), inbound and outbound IP addresses are posted, and the code relies on this factor. 

The program iterates through each line, and it stores both IPs in separate containers. However,with that iteration, some ‘magic’ also occurs. I created (4) logic-based functions that recognize common IP addresses - there are certainly a few other combinations, but the ones used cover the patterns of IPs that our file contains. The functions test at index (2) and (4),where IPs should be. If the value does not pass at least (1) test, the entire line is stored in another container that represents suspicious activity – possible malicious data. The program writes all of this information to a file called ‘scanners_found.txt’. 

The program is functional with Python 3, where Python 2 users may experience difficulty because of string attribute errors, in which a heavily reliant method is not accessible on that version of Python. Ultimately, when the code is run, it generates the new '.txt' file, and it contains a list of IP addresses and lines of possible malicious data. 

In conclusion, a good foundation of Python skills and understanding was needed, as well as some basic networking knowledge. I definitely utilized some resources to learn these skills. I primarily relied on a Python manual acquired from 'automatetheboringstuff.com', and I also sought help from peers and teachers. In retrospect, I definitely think the largest factor to completing this project was the technical understanding of Python. Without knowing the language 'well', it is clearly difficult to follow the operations and truly understand exactly what the tools do - and how to use them advantageously. The networking knowledge is certainly important, but I would claim that for this particular challenge; the coding takes precedence. 